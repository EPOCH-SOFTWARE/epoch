#\!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Check commit message format
commit_regex="^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}"

if \! grep -qE "$commit_regex" "$1"; then
    echo "‚ùå Invalid commit message format\!"
    echo ""
    echo "üìù Commit message should follow the format:"
    echo "   <type>[optional scope]: <description>"
    echo ""
    echo "üè∑Ô∏è  Available types:"
    echo "   feat:     A new feature"
    echo "   fix:      A bug fix"
    echo "   docs:     Documentation only changes"
    echo "   style:    Changes that do not affect code meaning (formatting, etc.)"
    echo "   refactor: A code change that neither fixes a bug nor adds a feature"
    echo "   test:     Adding missing tests or correcting existing tests"
    echo "   chore:    Changes to build process or auxiliary tools"
    echo "   perf:     A code change that improves performance"
    echo "   ci:       Changes to CI configuration files and scripts"
    echo "   build:    Changes that affect the build system or dependencies"
    echo "   revert:   Reverts a previous commit"
    echo ""
    echo "‚úÖ Example: feat(auth): add user login functionality"
    echo "‚úÖ Example: fix: resolve header navigation issue"
    exit 1
fi
